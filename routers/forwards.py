from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
import database.models.users as db_users
from middlewares import GetUserMiddleware
from aiogram.utils.keyboard import InlineKeyboardButton, InlineKeyboardMarkup
import database.models.users as db_users
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State

router = Router()
router.message.middleware(GetUserMiddleware())
router.callback_query.middleware(GetUserMiddleware())

class ForwardState(StatesGroup):
    forward = State()

cancel_kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel_forward")]
    ])

async def prepare_forward(message: Message, user: db_users.User | None, message_id: str, state: FSMContext):
    forward_to_user = await db_users.get_user_by_message_id(message_id)
    if not forward_to_user:
        return await message.answer("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω!")
    
    if user == forward_to_user:
        return await message.answer("–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–∞–º–æ–º—É —Å–µ–±–µ!")
    
    await state.set_state(ForwardState.forward)
    await state.update_data(forward_to_user=forward_to_user)

    return await message.answer(
        "üöÄ –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∞–Ω–æ–Ω–∏–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ–ª–æ–≤–µ–∫—É, –∫–æ—Ç–æ—Ä—ã–π –æ–ø—É–±–ª–∏–∫–æ–≤–∞–ª —ç—Ç—É —Å—Å—ã–ª–∫—É.\n\n–ù–∞–ø–∏—à–∏—Ç–µ —Å—é–¥–∞ –≤—Å—ë, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –µ–º—É –ø–µ—Ä–µ–¥–∞—Ç—å, –∏ —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥ –æ–Ω –ø–æ–ª—É—á–∏—Ç –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –Ω–æ –Ω–µ –±—É–¥–µ—Ç –∑–Ω–∞—Ç—å –æ—Ç –∫–æ–≥–æ.\n\n–û—Ç–ø—Ä–∞–≤–∏—Ç—å –º–æ–∂–Ω–æ —Ñ–æ—Ç–æ, –≤–∏–¥–µ–æ, üí¨ —Ç–µ–∫—Å—Ç, üîä –≥–æ–ª–æ—Å–æ–≤—ã–µ, üì∑–≤–∏–¥–µ–æ—Å–æ–æ–±—â–µ–Ω–∏—è (–∫—Ä—É–∂–∫–∏), –≥–∏—Ñ–∫–∏, –∞ —Ç–∞–∫–∂–µ —Å—Ç–∏–∫–µ—Ä—ã.\n\n‚ö†Ô∏è –≠—Ç–æ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∞–Ω–æ–Ω–∏–º–Ω–æ!",
        reply_markup=cancel_kb
    )

@router.callback_query(F.data == "cancel_forward", ForwardState.forward)
async def cancel_forward(callback: CallbackQuery, state: FSMContext):
    await callback.answer()
    await state.clear()
    return await callback.message.edit_text("‚ùå –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞!", reply_markup=None)

@router.callback_query(F.data.startswith("forward/"))
async def forward_callback(callback: CallbackQuery, user: db_users.User, state: FSMContext):
    await callback.answer()
    message_id = callback.data.split("/")[1]
    return await prepare_forward(callback.message, user, message_id, state)

@router.message(ForwardState.forward, F.text)
async def send_forward(message: Message, user: db_users.User, state: FSMContext):
    data = await state.get_data()
    forward_to_user: db_users.User = data.get("forward_to_user")

    await state.clear()
    
    if not forward_to_user:
        return await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞!")
    
    msg = await message.bot.send_message(
        forward_to_user.id,
        "üì® –ü–æ–ª—É—á–µ–Ω–æ –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ" if not forward_to_user.is_admin else f"üì® –ü–æ–ª—É—á–µ–Ω–æ –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ \n\n–∏–º—è: {message.from_user.full_name} –∞–π–¥–∏: {message.from_user.id} —é–∑–µ—Ä–Ω–∞–º–µ: @{message.from_user.username} –Ω–æ–º–µ—Ä {user.number}",
        disable_notification=True
    )
    
    await message.copy_to(forward_to_user.id, reply_to_message_id=msg.message_id, reply_markup=InlineKeyboardMarkup(inline_keyboard=[[
        InlineKeyboardButton(text="üîÅ –û—Ç–≤–µ—Ç–∏—Ç—å", callback_data="forward/"+user.message_id)
    ]]))

    await message.answer("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!", reply_markup=InlineKeyboardMarkup(inline_keyboard=[[
        InlineKeyboardButton(text="üîÅ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –µ—â—ë", callback_data="forward/"+forward_to_user.message_id),
    ]]))

    await user.update(sended_messages=user.sended_messages+1)
    await forward_to_user.update(getted_messages=forward_to_user.getted_messages+1)

    await message.delete()
    await message.bot.delete_message(message.chat.id, message.message_id-1)