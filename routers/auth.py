import random
import string
from aiogram.types import Message
from aiogram.utils.keyboard import ReplyKeyboardMarkup, KeyboardButton
import database.models.users as db_users
from middlewares import GetUserMiddleware
from aiogram import Router, F

router = Router()
router.message.middleware(GetUserMiddleware())

async def generate_unique_id():
    while True:
        id = ''.join(random.choices(string.ascii_letters + string.digits, k=10))
        
        result = await db_users.get_user_by_message_id(id)
        if result is None:
            return id

async def register(message: Message, user: db_users.User):
    kb = ReplyKeyboardMarkup(keyboard=[[
        KeyboardButton(text="üì± –û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", request_contact=True)
    ]], resize_keyboard=True, one_time_keyboard=True)

    await message.answer("üîó –î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞ –¥–æ–∫–∞–∂–∏—Ç–µ, —á—Ç–æ –≤—ã –Ω–µ —Ä–æ–±–æ—Ç, –æ—Ç–ø—Ä–∞–≤–∏–≤ —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", reply_markup=kb)

@router.message(F.contact)
async def handle_contact(message: Message, user: db_users.User):
    if user: return
    
    user = await db_users.create_user(
        id=message.from_user.id,
        number=message.contact.phone_number,
        message_id=await generate_unique_id(),
        is_admin=False
    )

    await message.answer("‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª–∏ —Å–≤–æ—é –ª–∏—á–Ω–æ—Å—Ç—å!")
    return await message.reply_to_message.delete()